// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: copyfrom.go

package sqlc

import (
	"context"
)

// iteratorForCreateProxyBlockTag implements pgx.CopyFromSource.
type iteratorForCreateProxyBlockTag struct {
	rows                 []CreateProxyBlockTagParams
	skippedFirstNextCall bool
}

func (r *iteratorForCreateProxyBlockTag) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForCreateProxyBlockTag) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].ProxyBlockId,
		r.rows[0].TagId,
	}, nil
}

func (r iteratorForCreateProxyBlockTag) Err() error {
	return nil
}

func (q *Queries) CreateProxyBlockTag(ctx context.Context, arg []CreateProxyBlockTagParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"proxy_block_tag"}, []string{"proxy_block_id", "tag_id"}, &iteratorForCreateProxyBlockTag{rows: arg})
}

// iteratorForCreateProxyTag implements pgx.CopyFromSource.
type iteratorForCreateProxyTag struct {
	rows                 []CreateProxyTagParams
	skippedFirstNextCall bool
}

func (r *iteratorForCreateProxyTag) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForCreateProxyTag) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].ProxyId,
		r.rows[0].TagId,
	}, nil
}

func (r iteratorForCreateProxyTag) Err() error {
	return nil
}

func (q *Queries) CreateProxyTag(ctx context.Context, arg []CreateProxyTagParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"proxy_tag"}, []string{"proxy_id", "tag_id"}, &iteratorForCreateProxyTag{rows: arg})
}
